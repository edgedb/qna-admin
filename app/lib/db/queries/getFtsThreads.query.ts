// GENERATED by @edgedb/generate v0.5.3

import type {Executor} from "edgedb";

export type GetFtsThreadsArgs = {
  readonly "query": string;
  readonly "offset": number;
  readonly "limit": number;
};

export type GetFtsThreadsReturns = Array<{
  "id": string;
  "messages": Array<{
    "content": string;
    "created_at": Date;
  }>;
}>;

export function getFtsThreads(client: Executor, args: GetFtsThreadsArgs): Promise<GetFtsThreadsReturns> {
  return client.query(`\
with res := (
  select fts::search(discord::Message, <str>$query, language := 'eng')
),
messages := (
  select res.object order by res.score desc
)
select distinct messages.<messages[is Thread] {
  id,
  messages: {
    content,
    created_at,
  } limit 5,
}
filter not exists .draft and not exists .qna
offset <int32>$offset
limit <int16>$limit;`, args);

}
